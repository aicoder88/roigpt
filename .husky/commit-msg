# husky commit-msg hook

# Get the commit message
commit_regex='^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .{1,50}'

# Check if commit message follows conventional commits format
if ! grep -qE "$commit_regex" "$1"; then
    echo ""
    echo "ðŸš¨ Invalid commit message format!"
    echo ""
    echo "Your commit message should follow the conventional commits format:"
    echo "  <type>[optional scope]: <description>"
    echo ""
    echo "Examples:"
    echo "  feat: add user authentication"
    echo "  fix(api): resolve login endpoint error"
    echo "  docs: update README with new setup instructions"
    echo "  style: fix button hover animation"
    echo "  refactor: extract animation constants"
    echo "  test: add unit tests for authentication"
    echo ""
    echo "Valid types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
    echo ""
    exit 1
fi

echo "âœ… Commit message format is valid!"